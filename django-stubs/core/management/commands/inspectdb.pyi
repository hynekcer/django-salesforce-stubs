from django.core.management.base import BaseCommand as BaseCommand, CommandError as CommandError, CommandParser
from django.db import DEFAULT_DB_ALIAS as DEFAULT_DB_ALIAS, connections as connections
from django.db.models.constants import LOOKUP_SEP as LOOKUP_SEP
from django.db.backends.base.introspection import FieldInfo
from typing import Any, Dict, List

class Command(BaseCommand):
    help: str = ...
    requires_system_checks: bool = ...
    stealth_options: Any = ...
    db_module: str = ...
    def add_arguments(self, parser: CommandParser) -> None: ...
    def handle(self, **options: Dict[str, Any]) -> None: ...
    def handle_inspection(self, options: Dict[str, Any]): ...
    def normalize_col_name(self, col_name: str, used_column_names: List[str], is_relation: bool): ...
    def get_field_type(self, connection: Any, table_name: str, row: List[FieldInfo]) -> Tuple[str, Dict[str, Any], List[str]]: ...
    def get_meta(self, table_name: str, constraints: Any, column_to_field_name: Any, is_view: bool, is_partition: Any) -> List[str]: ...
